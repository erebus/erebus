msg.wrap {text}

msg.config.unable_to_read_file Failed to load configuration (using defaults): "{error}"

msg.debug.saving_to_path Saving a debug log to {path}, please check it for sensitive information before sharing it.
msg.debug.unable_to_write_file Unable to write to our debug log file ({path}): {error}

msg.log.read_from_log_file Read {count} entries from tor's log file: {path} (read limit: {read_limit}, runtime: {runtime})

msg.setup.unknown_event_types erebus doesn't recognize the following event types: {event_types} (log 'UNKNOWN' events to see them)

msg.usage.invalid_arguments {error} (for usage provide --help)
msg.usage.not_a_valid_address '{address_input}' isn't a valid IPv4 address
msg.usage.not_a_valid_port '{port_input}' isn't a valid port number
msg.usage.unrecognized_log_flags Unrecognized event flags: {flags}

msg.debug.header
|Erebus {nyx_version} Debug Dump
|Stem Version: {stem_version}
|Python Version: {python_version}
|Platform: {system} ({platform})
|--------------------------------------------------------------------------------
|Erebus Configuration ({erebusrc_path}):
|{erebusrc_content}
|--------------------------------------------------------------------------------

msg.misc.event_types
|        d DEBUG      a ADDRMAP           k DESCCHANGED   s STREAM
|        i INFO       f AUTHDIR_NEWDESCS  g GUARD         r STREAM_BW
|        n NOTICE     h BUILDTIMEOUT_SET  l NEWCONSENSUS  t STATUS_CLIENT
|        w WARN       b BW                m NEWDESC       u STATUS_GENERAL
|        e ERR        c CIRC              p NS            v STATUS_SERVER
|                     j CLIENTS_SEEN      q ORCONN
|          DINWE tor runlevel+            A All Events
|          12345 erebus runlevel+         X No Events
|                                         U Unknown Events

msg.usage.help_output
|Usage python run_erebus.py [OPTION]
|erebus - Tor Relay Web Dashboard.
|
|  -a, --address ADDRESS           address where erebus server will run. Default is localhost
|  -p, --port PORT                 port where erebus will serve and wait for clients
|  -l, --listen-port PORT          port where erebus client will run. 
|  -i, --interface [ADDRESS:]PORT  change control interface from {address}:{port}
|  -S, --socket SOCKET_PATH        attach using unix domain socket if present,
|                                    SOCKET_PATH defaults to: {socket}
|  -C, --config CONFIG_PATH        loaded configuration options, CONFIG_PATH
|                                    defaults to: {config_path}
|  -D, --debug LOG_PATH            writes all erebus logs to the given location
|  -L, --log EVENT_FLAGS           event types to be logged (default: {events})
|{event_flags}
|  -s, --server                    run in server mode, waiting for clients to connect
|  -c, --client                    run in client mode, connecting to a erebus server
|  -d, --dual                      run erebus with both server and mode running in the same machine
|  -v, --version                   provides version information
|  -h, --help                      presents this help
|
|Example:
|run_erebus -i 1643 -d             attach to control port 1643 and run in dual mode
|run_erebus -c -a 127.0.0.12 -p 8887   run in client mode (default port) and connect to erebus server 127.0.0.12:8887
|run_erebus -c -l 8886 -a 127.0.0.12 -p 8887   run in client mode (port 8886) and connect to erebus server 127.0.0.12:8887

msg.usage.version_output
|erebus version {version} (released {date})
|

